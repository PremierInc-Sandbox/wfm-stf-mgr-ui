plugins {
//  id "org.sonarqube" version "2.7"
  id "maven-publish"
  id "premierinc.wfm.stfmgr.node"
  id "premierinc.wfm.stfmgr.docker"
  id "premierinc.wfm.helm"
}

ext{
  group 'com.premierinc.pcops.stfs'
  version '2.10.0-SNAPSHOT'

  registry = 'dtr.premierinc.com'
  image = "${registry}/pcops_org/pco-staff-scheduler-ui:${version}"
}

repositories {
  mavenLocal()
  maven { url "https://code.premierinc.com/artifacts/content/groups/public" }
}

//sonarqube {
//  properties {
//    property("sonar.sources", "src/app")
//    property("sonar.tests", "src/app")
//    property("sonar.test.inclusions", "**/*.spec.ts")
//    property("sonar.typescript.lcov.reportPaths", "coverage/wtf/lcov.info")
//    property("sonar.exclusions","**/*.spec.ts," + "src/app/shared/service/fixtures/user-access-data.ts," + "src/app/shared/service/messages.service.ts")
//  }
//}

wrapper {
  distributionUrl = "https://code.premierinc.com/artifacts/repository/gradle-distributions/gradle-7.4-bin.zip"
}

tasks.register("clean", Delete) {
  delete project.buildDir
}

gitProperties {
  gitPropertiesDir.set(layout.buildDirectory)
  dateFormat = "yyyy-MM-dd hh:mm:ss a z"
  dateFormatTimeZone = 'EST'

  customProperty "build.version", { project.version }
  customProperty "version", { project.version }
}

wfmHelm {
  sourceDirectory(layout.projectDirectory.dir("deployment/helm/charts"))
  charts {
    create("stfMgrUi") {}
  }
}

tasks.register("release") {t ->
  t.dependsOn(createDockerContext, createHelmCharts)
}
